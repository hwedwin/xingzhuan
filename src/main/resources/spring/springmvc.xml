<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        ">

	<context:component-scan base-package="com.kedu.xingzhuan.controller,
	com.kedu.xingzhuan.framework" />
	<context:property-placeholder location="classpath:resource/resource.properties" />
	<!-- 配置视图解析器 -->
	<!-- <bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean> -->
	
	<!-- 配置静态资源的访问 -->
	<!-- <mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/commons/" mapping="/commons/**" />
	<mvc:resources location="/pdf/" mapping="/pdf/**" />
	<mvc:resources location="/excel/" mapping="/excel/**" /> -->
	
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 设定文件上传的最大值50MB，50*1024*1024 -->
		<property name="maxUploadSize" value="52428800"></property>
	</bean>
	
	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!--拦截请求-->
			<mvc:mapping path="/**" />
			<bean class="com.kedu.xingzhuan.framework.interceptor.LoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors> 

	<!-- 自定义异常处理类 -->
	<bean id="exceptionHandler" class="com.kedu.xingzhuan.framework.exception.DefaultHandlerExceptionResolver"/> 

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <!-- <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/> -->

    <!-- AOP式方法级权限检查  -->
    <!-- <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
    	<property name="proxyTargetClass" value="true" />
    </bean> -->
	
	<!--通过处理器映射DefaultAnnotationHandlerMapping来开启支持@Controller注解
		<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
		<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	-->
	
	<!--通过处理器适配器AnnotationMethodHandlerAdapter来开启支持@RequestMapping注解-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	           <!--  设置返回字符串编码 -->
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	                <property name = "supportedMediaTypes">
	                    <list>
	                        <value>text/html;charset=UTF-8</value>
	                        <value>application/json;charset=UTF-8</value>
	                    </list>
	                </property>
	            </bean>
	            <!-- json转换器 -->
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	                <property name="objectMapper">  
	                   <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
	                       <property name="dateFormat">  
	                           <bean class="java.text.SimpleDateFormat">  
	                               <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
	                           </bean>  
	                       </property>
	                   </bean>
	                </property>
	                <property name="supportedMediaTypes">
	                    <list>
	                        <value>text/html;charset=UTF-8</value>
	                        <value>application/json;charset=UTF-8</value>
	                    </list>
	                </property>
	            </bean>
	        </list>
	    </property>
	</bean>
	
    <mvc:annotation-driven />
    	<!-- <mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
				<property name="objectMapper">  
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">  
						<property name="dateFormat">  
							<bean class="java.text.SimpleDateFormat">  
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
							</bean>  
						</property>  
					</bean>  
				</property>  
			</bean>  
		</mvc:message-converters> 
    </mvc:annotation-driven>-->
	
	
	
	<!-- 枚举类型定义：fastjson 输出值为null的字段，默认为false -->
	<!-- <bean id="FASTJSON_WRITE_MAP_NULL" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">    
        <property name="staticField" value="com.alibaba.fastjson.serializer.SerializerFeature.WriteMapNullValue" />    
    </bean> 
    
    <mvc:annotation-driven>
       注入json自动转换，使用fastjson 
		<mvc:message-converters register-defaults="true">
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="features" ref="FASTJSON_WRITE_MAP_NULL"/>
                <property name="supportedMediaTypes">解决乱码
		           <list>  
		               <value>application/json;charset=UTF-8</value>  
		               <value>text/html;charset=UTF-8</value>  
		           </list>  
       			</property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven> --> 
	
	<!-- <import resource="classpath:spring/applicationContext-cache.xml"/> -->
    <!-- <import resource="classpath:spring/applicationContext-shiro.xml"/> -->
    <!-- <import resource="classpath:spring/applicationContext-task.xml"/> -->
    
</beans>
